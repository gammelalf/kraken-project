services:
  nginx-dev:
    restart: unless-stopped
    stop_signal: SIGKILL
    depends_on: [ frontend-dev, webserver-dev ]
    networks: [ net-kraken ]
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - ./data/conf/nginx/kraken-dev.conf:/etc/nginx/conf.d/default.conf:ro
    image: registry:443/kraken-dev/nginx:${DEV_TAG}
    build:
      dockerfile: ./build/dockerfiles/nginx-dev.Dockerfile

  webserver-dev:
    labels:
      - webserver
    restart: unless-stopped
    depends_on: [ postgres-dev ]
    networks: [ net-kraken ]
    volumes:
      - kraken-vol:/var/lib/kraken
      - kraken-logs-vol:/var/log/kraken
      - ./kraken/migrations:/migrations
    env_file: [ .env ]
    environment:
      - POSTGRES_HOST=postgres-dev
      - POSTGRES_PORT=5432
      - POSTGRES_DB=kraken
      - POSTGRES_USER=kraken
      - POSTGRES_PASSWORD=password
    user: "${UID}:${GID}"
    image: registry:443/kraken-dev/webserver:${DEV_TAG}
    build:
      dockerfile: ./build/dockerfiles/webserver-dev.Dockerfile

  frontend-dev:
    restart: unless-stopped
    volumes:
      - ./kraken_frontend:/app
    env_file: [ .env ]
    networks: [ net-kraken ]
    image: registry:443/kraken-dev/frontend:${DEV_TAG}
    user: "${UID}:${GID}"
    build:
      dockerfile: ./build/dockerfiles/frontend-dev.Dockerfile

  postgres-dev:
    restart: unless-stopped
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    networks: [ net-kraken ]
    volumes:
      - postgres-vol:/var/lib/postgresql/data/
    env_file: [ .env ]
    environment:
      - POSTGRES_HOST=postgres-dev
      - POSTGRES_PORT=5432
      - POSTGRES_DB=kraken
      - POSTGRES_USER=kraken
      - POSTGRES_PASSWORD=password
    image: registry:443/kraken-dev/postgres:${DEV_TAG}
    build:
      dockerfile: ./build/dockerfiles/postgres.Dockerfile

networks:
  net-kraken:
    driver: bridge

volumes:
  postgres-vol:
    name: ${COMPOSE_PROJECT_NAME}-postgres-vol-${DEV_TAG}
  kraken-vol:
  kraken-logs-vol:
