/* tslint:disable */
/* eslint-disable */
/**
 * kraken
 * The core component of kraken-project
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateFindingAffectedBulkRequestItem } from './CreateFindingAffectedBulkRequestItem';
import {
    CreateFindingAffectedBulkRequestItemFromJSON,
    CreateFindingAffectedBulkRequestItemFromJSONTyped,
    CreateFindingAffectedBulkRequestItemToJSON,
} from './CreateFindingAffectedBulkRequestItem';

/**
 * The request to add new objects affected by a finding
 * @export
 * @interface CreateFindingAffectedBulkRequest
 */
export interface CreateFindingAffectedBulkRequest {
    /**
     * List of objects to add as affected
     * @type {Array<CreateFindingAffectedBulkRequestItem>}
     * @memberof CreateFindingAffectedBulkRequest
     */
    affected: Array<CreateFindingAffectedBulkRequestItem>;
}

/**
 * Check if a given object implements the CreateFindingAffectedBulkRequest interface.
 */
export function instanceOfCreateFindingAffectedBulkRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "affected" in value;

    return isInstance;
}

export function CreateFindingAffectedBulkRequestFromJSON(json: any): CreateFindingAffectedBulkRequest {
    return CreateFindingAffectedBulkRequestFromJSONTyped(json, false);
}

export function CreateFindingAffectedBulkRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFindingAffectedBulkRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'affected': ((json['affected'] as Array<any>).map(CreateFindingAffectedBulkRequestItemFromJSON)),
    };
}

export function CreateFindingAffectedBulkRequestToJSON(value?: CreateFindingAffectedBulkRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'affected': ((value.affected as Array<any>).map(CreateFindingAffectedBulkRequestItemToJSON)),
    };
}

