/* tslint:disable */
/* eslint-disable */
/**
 * kraken
 * The core component of kraken-project
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FullWorkspaceInvitation } from './FullWorkspaceInvitation';
import {
    FullWorkspaceInvitationFromJSON,
    FullWorkspaceInvitationFromJSONTyped,
    FullWorkspaceInvitationToJSON,
} from './FullWorkspaceInvitation';

/**
 * A list of invitations to workspaces
 * @export
 * @interface WorkspaceInvitationList
 */
export interface WorkspaceInvitationList {
    /**
     * All invitations of the current user
     * @type {Array<FullWorkspaceInvitation>}
     * @memberof WorkspaceInvitationList
     */
    invitations: Array<FullWorkspaceInvitation>;
}

/**
 * Check if a given object implements the WorkspaceInvitationList interface.
 */
export function instanceOfWorkspaceInvitationList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "invitations" in value;

    return isInstance;
}

export function WorkspaceInvitationListFromJSON(json: any): WorkspaceInvitationList {
    return WorkspaceInvitationListFromJSONTyped(json, false);
}

export function WorkspaceInvitationListFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkspaceInvitationList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'invitations': ((json['invitations'] as Array<any>).map(FullWorkspaceInvitationFromJSON)),
    };
}

export function WorkspaceInvitationListToJSON(value?: WorkspaceInvitationList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'invitations': ((value.invitations as Array<any>).map(FullWorkspaceInvitationToJSON)),
    };
}

