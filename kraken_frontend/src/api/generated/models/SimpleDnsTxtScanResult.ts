/* tslint:disable */
/* eslint-disable */
/**
 * kraken
 * The core component of kraken-project
 *
 * The version of the OpenAPI document: 0.4.2
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DnsTxtScanSummaryType } from './DnsTxtScanSummaryType';
import {
    DnsTxtScanSummaryTypeFromJSON,
    DnsTxtScanSummaryTypeFromJSONTyped,
    DnsTxtScanSummaryTypeToJSON,
} from './DnsTxtScanSummaryType';

/**
 * A simple representation of a dns txt scan result
 * @export
 * @interface SimpleDnsTxtScanResult
 */
export interface SimpleDnsTxtScanResult {
    /**
     * The primary key
     * @type {string}
     * @memberof SimpleDnsTxtScanResult
     */
    uuid: string;
    /**
     * The attack which produced this result
     * @type {string}
     * @memberof SimpleDnsTxtScanResult
     */
    attack: string;
    /**
     * The point in time, this result was produced
     * @type {Date}
     * @memberof SimpleDnsTxtScanResult
     */
    createdAt: Date;
    /**
     * The source address
     * @type {string}
     * @memberof SimpleDnsTxtScanResult
     */
    domain: string;
    /**
     * 
     * @type {DnsTxtScanSummaryType}
     * @memberof SimpleDnsTxtScanResult
     */
    collectionType: DnsTxtScanSummaryType;
}

/**
 * Check if a given object implements the SimpleDnsTxtScanResult interface.
 */
export function instanceOfSimpleDnsTxtScanResult(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "uuid" in value;
    isInstance = isInstance && "attack" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "domain" in value;
    isInstance = isInstance && "collectionType" in value;

    return isInstance;
}

export function SimpleDnsTxtScanResultFromJSON(json: any): SimpleDnsTxtScanResult {
    return SimpleDnsTxtScanResultFromJSONTyped(json, false);
}

export function SimpleDnsTxtScanResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimpleDnsTxtScanResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': json['uuid'],
        'attack': json['attack'],
        'createdAt': (new Date(json['created_at'])),
        'domain': json['domain'],
        'collectionType': DnsTxtScanSummaryTypeFromJSON(json['collection_type']),
    };
}

export function SimpleDnsTxtScanResultToJSON(value?: SimpleDnsTxtScanResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uuid': value.uuid,
        'attack': value.attack,
        'created_at': (value.createdAt.toISOString()),
        'domain': value.domain,
        'collection_type': DnsTxtScanSummaryTypeToJSON(value.collectionType),
    };
}

