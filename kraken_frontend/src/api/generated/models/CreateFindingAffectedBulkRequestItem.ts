/* tslint:disable */
/* eslint-disable */
/**
 * kraken
 * The core component of kraken-project
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AggregationType } from './AggregationType';
import {
    AggregationTypeFromJSON,
    AggregationTypeFromJSONTyped,
    AggregationTypeToJSON,
} from './AggregationType';

/**
 * A single affected object to create as part of a bulk
 * @export
 * @interface CreateFindingAffectedBulkRequestItem
 */
export interface CreateFindingAffectedBulkRequestItem {
    /**
     * The object's uuid
     * @type {string}
     * @memberof CreateFindingAffectedBulkRequestItem
     */
    uuid: string;
    /**
     * 
     * @type {AggregationType}
     * @memberof CreateFindingAffectedBulkRequestItem
     */
    type: AggregationType;
}

/**
 * Check if a given object implements the CreateFindingAffectedBulkRequestItem interface.
 */
export function instanceOfCreateFindingAffectedBulkRequestItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "uuid" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function CreateFindingAffectedBulkRequestItemFromJSON(json: any): CreateFindingAffectedBulkRequestItem {
    return CreateFindingAffectedBulkRequestItemFromJSONTyped(json, false);
}

export function CreateFindingAffectedBulkRequestItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFindingAffectedBulkRequestItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': json['uuid'],
        'type': AggregationTypeFromJSON(json['type']),
    };
}

export function CreateFindingAffectedBulkRequestItemToJSON(value?: CreateFindingAffectedBulkRequestItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uuid': value.uuid,
        'type': AggregationTypeToJSON(value.type),
    };
}

