/* tslint:disable */
/* eslint-disable */
/**
 * kraken
 * The core component of kraken-project
 *
 * The version of the OpenAPI document: 0.4.2
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SimpleDomain } from './SimpleDomain';
import {
    SimpleDomainFromJSON,
    SimpleDomainFromJSONTyped,
    SimpleDomainToJSON,
} from './SimpleDomain';

/**
 * A new domain was found
 * @export
 * @interface WsMessageOneOf15
 */
export interface WsMessageOneOf15 {
    /**
     * The workspace this domain is related to
     * @type {string}
     * @memberof WsMessageOneOf15
     */
    workspace: string;
    /**
     * 
     * @type {SimpleDomain}
     * @memberof WsMessageOneOf15
     */
    domain: SimpleDomain;
    /**
     * 
     * @type {string}
     * @memberof WsMessageOneOf15
     */
    type: WsMessageOneOf15TypeEnum;
}


/**
 * @export
 */
export const WsMessageOneOf15TypeEnum = {
    NewDomain: 'NewDomain'
} as const;
export type WsMessageOneOf15TypeEnum = typeof WsMessageOneOf15TypeEnum[keyof typeof WsMessageOneOf15TypeEnum];


/**
 * Check if a given object implements the WsMessageOneOf15 interface.
 */
export function instanceOfWsMessageOneOf15(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "workspace" in value;
    isInstance = isInstance && "domain" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function WsMessageOneOf15FromJSON(json: any): WsMessageOneOf15 {
    return WsMessageOneOf15FromJSONTyped(json, false);
}

export function WsMessageOneOf15FromJSONTyped(json: any, ignoreDiscriminator: boolean): WsMessageOneOf15 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'workspace': json['workspace'],
        'domain': SimpleDomainFromJSON(json['domain']),
        'type': json['type'],
    };
}

export function WsMessageOneOf15ToJSON(value?: WsMessageOneOf15 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'workspace': value.workspace,
        'domain': SimpleDomainToJSON(value.domain),
        'type': value.type,
    };
}

