/* tslint:disable */
/* eslint-disable */
/**
 * kraken
 * The core component of kraken-project
 *
 * The version of the OpenAPI document: 0.4.2
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Color } from './Color';
import {
    ColorFromJSON,
    ColorFromJSONTyped,
    ColorToJSON,
} from './Color';
import type { TagType } from './TagType';
import {
    TagTypeFromJSON,
    TagTypeFromJSONTyped,
    TagTypeToJSON,
} from './TagType';

/**
 * A simple tag
 * @export
 * @interface SimpleTag
 */
export interface SimpleTag {
    /**
     * The uuid of the tag
     * @type {string}
     * @memberof SimpleTag
     */
    uuid: string;
    /**
     * The name of the tag
     * @type {string}
     * @memberof SimpleTag
     */
    name: string;
    /**
     * 
     * @type {Color}
     * @memberof SimpleTag
     */
    color: Color;
    /**
     * 
     * @type {TagType}
     * @memberof SimpleTag
     */
    tagType: TagType;
}

/**
 * Check if a given object implements the SimpleTag interface.
 */
export function instanceOfSimpleTag(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "uuid" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "color" in value;
    isInstance = isInstance && "tagType" in value;

    return isInstance;
}

export function SimpleTagFromJSON(json: any): SimpleTag {
    return SimpleTagFromJSONTyped(json, false);
}

export function SimpleTagFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimpleTag {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': json['uuid'],
        'name': json['name'],
        'color': ColorFromJSON(json['color']),
        'tagType': TagTypeFromJSON(json['tag_type']),
    };
}

export function SimpleTagToJSON(value?: SimpleTag | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uuid': value.uuid,
        'name': value.name,
        'color': ColorToJSON(value.color),
        'tag_type': TagTypeToJSON(value.tagType),
    };
}

