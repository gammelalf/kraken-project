/* tslint:disable */
/* eslint-disable */
/**
 * kraken
 * The core component of kraken-project
 *
 * The version of the OpenAPI document: 0.3.5
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FindingFactoryIdentifier } from './FindingFactoryIdentifier';
import {
    FindingFactoryIdentifierFromJSON,
    FindingFactoryIdentifierFromJSONTyped,
    FindingFactoryIdentifierToJSON,
} from './FindingFactoryIdentifier';

/**
 * The request to set a finding factory entry
 * @export
 * @interface SetFindingFactoryEntryRequest
 */
export interface SetFindingFactoryEntryRequest {
    /**
     * 
     * @type {FindingFactoryIdentifier}
     * @memberof SetFindingFactoryEntryRequest
     */
    identifier: FindingFactoryIdentifier;
    /**
     * Set's the entry's finding definition or `None` to disable an entry
     * @type {string}
     * @memberof SetFindingFactoryEntryRequest
     */
    findingDefinition?: string | null;
}

/**
 * Check if a given object implements the SetFindingFactoryEntryRequest interface.
 */
export function instanceOfSetFindingFactoryEntryRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "identifier" in value;

    return isInstance;
}

export function SetFindingFactoryEntryRequestFromJSON(json: any): SetFindingFactoryEntryRequest {
    return SetFindingFactoryEntryRequestFromJSONTyped(json, false);
}

export function SetFindingFactoryEntryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetFindingFactoryEntryRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'identifier': FindingFactoryIdentifierFromJSON(json['identifier']),
        'findingDefinition': !exists(json, 'finding_definition') ? undefined : json['finding_definition'],
    };
}

export function SetFindingFactoryEntryRequestToJSON(value?: SetFindingFactoryEntryRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'identifier': FindingFactoryIdentifierToJSON(value.identifier),
        'finding_definition': value.findingDefinition,
    };
}

